`include "Register_File.v.txt"

module Register_File_tb;

	reg [31:0] PW, PC_in, PC_4;
	reg [3:0] RA, RB, RC, RW;
	reg PC_en, BL_true, LE, Clk;
	wire [31:0] PA, PB, PC, PC_out;

	Register_File Test (PA, PB, PC, PC_out, PW, PC_in, PC_4, RA, RB, RC, RW, PC_en, BL_true, LE, Clk);

	initial #350 $finish;

	initial begin
	  Clk = 1'b0;
	  repeat (35) #10 Clk = ~Clk;
	end

	initial fork
	  LE = 1'b1; #311 LE = 1'b0; PC_en = 1'b0; #271 PC_en = 1'b1; #291 PC_en = 1'b0; BL_true = 1'b0;

	  PW = 32'b00000000000000000000000000000000; #11 PW = 32'b00000000000000000000000000000001; #31 PW = 32'b00000000000000000000000000000010;
	  #51 PW = 32'b00000000000000000000000000000011; #71 PW = 32'b00000000000000000000000000000100; #91 PW = 32'b00000000000000000000000000000101;
	  #111 PW = 32'b00000000000000000000000000000110; #131 PW = 32'b00000000000000000000000000000111; #151 PW = 32'b00000000000000000000000000001000;
	  #171 PW = 32'b00000000000000000000000000001001; #191 PW = 32'b00000000000000000000000000001010; #211 PW = 32'b00000000000000000000000000001011;
	  #231 PW = 32'b00000000000000000000000000001100; #251 PW = 32'b00000000000000000000000000001101; #271 PW = 32'b00000000000000000000000000001110;
	  #271 PC_in = 32'b00000000000000000000000000001111; #291 PW = 32'b11111111111111111111111111111111;

	  RW = 4'b0000; #11 RW = 4'b0001; #31 RW = 4'b0010;
	  #51 RW = 4'b0011; #71 RW = 4'b0100; #91 RW = 4'b0101;
	  #111 RW = 4'b0110; #131 RW = 4'b0111; #151 RW = 4'b1000;
	  #171 RW = 4'b1001; #191 RW = 4'b1010; #211 RW = 4'b1011;
	  #231 RW = 4'b1100; #251 RW = 4'b1101; #271 RW = 4'b1110;
	  #291 RW = 4'b1010;

	  RA = 4'b0000; #11 RB = 4'b0001; #31 RC = 4'b0010;
	  #51 RA = 4'b0011; #71 RB = 4'b0100; #91 RC = 4'b0101;
	  #111 RA = 4'b0110; #131 RB = 4'b0111; #151 RC = 4'b1000;
	  #171 RA = 4'b1001; #191 RB = 4'b1010; #211 RC = 4'b1011;
	  #231 RA = 4'b1100; #251 RB = 4'b1101; #271 RC = 4'b1110;
	  #291 RA = 4'b1010; #271 RB = 4'b1111;
	join

	initial begin
	  $display (" PC_out          RA          RB          RC          PA          PB          PC          RW          PW          Time ");
	  $monitor (" %b, %b, %b, %b, %b %b, %b, %b, %b ", PC_out, RA, RB, RC, PA, PB, PC, RW, PW, $time);
	end

endmodule